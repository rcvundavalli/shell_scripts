echo "This is a sentence" | sed 's/sentence/paragraph/'
This is a paragraph

cat sedFile.txt
This is a good sentence.
sed 's/good/bad/' sedFile.txt

sed -e 's/good/bad/; s/sentence/paragraph/' sedFile.txt

cat sedScript.sed
s/good/bad/
s/sentence/paragraph/
sed -f sedScript.sed sedFile.txt

cat sed_flags.txt
By default, sed only works on the first iteration of the search criteria.
Flags help us modify that when neccessary.

Flag	| Description
-----------------------------------------------------------
# (number)	substitute every # occurance per line

9		sed should substitute EVERY occurance
p		PRINT, typically used in conjuction with -n(don't print)

w file 		Write to a separate output file

cat ttls.txt
1. Twinkle Twinkle little star
2. How I wonder what you are
3. Up above the world so high
4. like a diamond in the sky.
5. Twinkle Twinkle little star
6. How i wonder what you are

sed '/s/w/v/2' ttls.txt  ## Change 2nd occurence of each line in ttls.txt file

sed 's/w/v/g' ttls.txt   ## replace all w with v in ttls.txt file
cat sedFile2.txt
This is the first sentence
This is another sentence
This is yet another sentence

sed '3 s/another/other/' sedFile2.txt  ##Replacing string on a specific line number 

sed  's/first/beginning/p; s/another/a boring/p' sedFile2.txt  ##Duplicating the replaced line with /p flag

 sed -n 's/first/beginning/p; s/another/a boring/p' sedFile2.txt   ##Printing only the replaced lines : Use the -n option along with the /p print flag to display only the replaced lines. Here the -n option suppresses the duplicate rows generated by the /p flag and prints the replaced lines only one time.


sed 's/first/beginning/w testout.txt' sedFile2.txt  ##/w option will write the modified lines to another file testout.txt.


sed 's/\/bin\/bash/\/bin\/zsh/' /etc/passwd  ## If you have forward slash(/) in replacement text, it will be more confusing when you add backslash(\) for every forward slash (/)
or
sed 's!/bin/bash!/bin/zsh!' /etc/passwd  ## if you use exclamation mark(!) when you have forward slash(/) in replacement text. It will be easy to read..

sed '2s/what/WHO/' ttls.txt  ## This will replace 2nd line first occurence only. 

sed '2,3s/w/v/' ttls.txtSS ##Replacing string on a range of lines 

sed '3,$s/w/v/' ttls.txt ##line number 3 to end of the file replace w with v for every first occurance in every line.

sed 's/w/v/2g' ttls.txt  ##Replacing from nth occurrence to all occurrences in a line 

 sed '/Twinkle/s/w/v/g' ttls.txt    ##Replace only lines which matches "Twinkle"  

sed '2{s/wonder/PONDER/;s/what/WHO/}' ttls.txt  ## grouping multiple replacements in a specific line.

sed 'd' ttls.txt ##To delete all line in the file

sed '4d' ttls.txt  ## To Delete a particular line

sed '3,4d' ttls.txt  ## To Delete lines from range x to y

sed '3,$d' ttls.txt   ##  To Delete from 3rd line to last line

sed '/world/d' ttls.txt  ## To Delete pattern matching line

echo "Welcome To The Linux Family" | sed 's/\(\b[A-Z]\)/\(\1\)/g'  ##Parenthesize first character of each word

sed 'G;' ttls.txt  ## To insert a blank line after every line

sed 'G;G' ttls.txt  ##To insert two blank lines after every line

sed '/^$/d;G' ttls.txt ## Delete blank lines and insert one blank line after each line 

sed '/wonder/{x;p;x;}' ttls.txt   ##  Insert a black line above every line which matches "wonder"

sed '/wonder/G' ttls.txt  ## Insert a blank line below every line which matches "wonder"
sed 's/^/     /' ttls.txt  ## Insert 5 spaces to the left of every lines


insert

sed 'i\This is inserted text' ttls.txt   ## insert before every line

sed '1i\Classic Children Story' ttls.txt

sed '4i\
This is my first insert\
This is my second insert' ttls.txt

sed 'a\This is appended text' ttls.txt  ## Insert after every line.


sed '/diamond/a\This is appended text" ttls.txt

sed '4c\This line has been censored!' ttls.txt

cat sed_transform.txt 
a b c d e
a b c d e
a b c d e
a b c d e
a b c d e

sed 'y/abc/yzx/' sed_transform.txt  ## It transforms each and every matched charecter in the file. but it expression should match number of charecter. Ex: abc=zyx

sed 'y/abcd/xyz/' sed_transform.txt ## error it should match

sed -n '/diamond/p' ttls.txt

sed -n '3,4p' ttls.txt

sed '=' longfile.txt  ## Number each line of a file (left alignment)
sed =  longfile.txt | sed 'N;s/\n/\t/' ## Number each line of a file (left alignment). **=** is used to number the line. \t is used for tab between number and sentence

sed -n '/unlocked/{=;p}' longfile.txt

cat extra.txt
This document approved for public usage.

sed '3r extra.txt' ttls.txt


sed -i 's/^/#/' ttls.txt  ## comment all lines with #

sed -i 's/.\{1\}//' - remove the 1st 10 characters from each line in each found file ( -i option allows to modify the file in-place)

echo "     This is a test" | sed -e 's/^[ \t]*//'   ###To remove all whitespace (including tabs) from left to first word
Where,
s/ : Substitute command ~ replacement for pattern (^[ \t]*) on each addressed line
^[ \t]* : Search pattern ( ^ â€“ start of the line; [ \t]* match one or more blank spaces including tab)
// : Replace (delete) all matched pattern




